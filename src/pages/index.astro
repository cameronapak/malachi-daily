---
import { Image } from 'astro:assets';

import Layout from '../layouts/Layout.astro';
import logoImgUrl from '../../public/logo.png';

const scriptureText = 'And whatever you do, whether in word or deed, do it all in the name of the Lord Jesus, giving thanks to God the Father through him.';
const scriptureRef = 'Colossians 3:17 (NIV)';
---

<Layout title="Malachi Daily | Simple Scripture Memorization, Together">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Space+Mono:wght@700&display=swap" rel="stylesheet">
	<main class="w-screen h-full min-h-screen px-6 flex justify-center bg-gray-100">
		<div class="max-w-[600px] w-full flex flex-col py-12 gap-12">
			<!-- LOGO -->
			<div class="w-full flex gap-4 items-center">
				<Image 
					src={logoImgUrl} 
					alt="Malachi Daily Logo | shows hands praying" 
					class={`aspect-[${logoImgUrl.height}/${logoImgUrl.width}] h-[48px] w-fit`}
				/>
				<h2 class="text-3xl text-gray-800 font-bold whitespace-nowrap">Malachi Daily</h2>
			</div>

			<!-- SCRIPTURE TO MEMORIZE -->
			<section
				x-data={`{
					scriptureTextOriginal: '${scriptureText}',
					scriptureRef: '${scriptureRef}',
					// TODO fix this and make it show fidelity per day of week
					get fidelityOfTheDay() {
						// Get day of the week as a number from 0 to 6
						const dayOfWeek = new Date().getDay();
						// Turn that into a number from 0 to 6
						let dayOfWeekAsNumber = 0;
						if (dayOfWeek === 7) {
							dayOfWeekAsNumber = 0;
						} else {
							dayOfWeekAsNumber = dayOfWeek;
						}
						return dayOfWeekAsNumber * 10;	
					},
					fidelity: this.fidelityOfTheDay || 0,
					showFirstLetter: false,
					get scriptureText() {
						// Replace some words from the original with underscores for each character
						// but do so where we replace more and more words as fidelity grows
						// when fideltiy is at 0, we just return the original
						// when fidelity is at 60, we return every word with underscores for each character
						const words = this.scriptureTextOriginal.split(' ');

						function convertWordToUnderscores(word, showFirstCharacter = false) {
							const wordToBeReplaced = word.match(/([A-Za-z]+)/ig)?.[0] || ''
							const restOfWord = word.replace(wordToBeReplaced, '')
							let wordToReturn = '';

							if (showFirstCharacter) {
								wordToReturn = word[0] + "_".repeat(wordToBeReplaced.length - 1) + restOfWord
							} else {
								wordToReturn = "_".repeat(wordToBeReplaced.length) + restOfWord
							}

							return wordToReturn
						}

						return words
							.map((word, index) => {
								const fidelityAsNumber = Number(this.fidelity);
								
								if (fidelityAsNumber === 0) {
									return word
								}

								if (fidelityAsNumber === 60) {
									return convertWordToUnderscores(word, this.showFirstLetter)
								}

								const percentOfWordsHidden = fidelityAsNumber / 60;
								const numOfWordsToReplace = Math.round(percentOfWordsHidden * words.length)

								const indicesToReplace = []
								for (let i = 0; i < words.length; i += 1) {
									const index = Math.floor(i * words.length / numOfWordsToReplace);
    								indicesToReplace.push(index);
								}

								if (indicesToReplace.includes(index)) {
									return convertWordToUnderscores(word, this.showFirstLetter)
								}

								return word;
							})
							.join(' ');
					},
				}`}
				id="scripture" 
				x-init="fidelity = fidelityOfTheDay"
				class="rounded-md text-start"
			>
				<div class="bg-white shadow-xl p-6 rounded-xl">
					<h1 x-text="scriptureRef" class="text-2xl font-normal mb-4 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600">
					</h1>
					<h2 
						x-text="scriptureText" 
						class="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-600 font-mono tracking-tighter"
					>
					</h2>
				</div>

				<!-- Scrubbing Input -->
				<input x-model="fidelity" type="range" min="0" max="60" value="0" class="range mt-16 range-sm" step="10" />
				<div class="w-full flex justify-between text-xs px-2">
					<span>|</span>
					<span>|</span>
					<span>|</span>
					<span>|</span>
					<span>|</span>
					<span>|</span>
					<span>|</span>
				</div>
				<div class="w-full flex justify-between text-xs mt-1 font-mono">
					<span>Sun</span>
					<span>Mon</span>
					<span>Tue</span>
					<span>Wed</span>
					<span>Thu</span>
					<span>Fri</span>
					<span>Sat</span>
				</div>

				<!-- Toggle Show First Letter -->
				<div class="form-control w-fit mt-6">
					<label class="label cursor-pointer flex gap-2 items-center">
						<input x-model="showFirstLetter" type="checkbox" checked="checked" class="checkbox" />
					  	<span class="label-text">Show the first letter in each hidden word</span> 
					</label>
				</div>				  
			</section>

			<!-- Subscribe -->
			<iframe 
				src="https://embeds.beehiiv.com/c8ce3263-a472-44d8-a911-db5da1e572e2" 
				data-test-id="beehiiv-embed" 
				class="w-full rounded-xl"
				height="320" 
				frameborder="0" 
				scrolling="no" 
				style="margin: 0; background-color: transparent;"
				loading="lazy"
			></iframe>
		</div>
	</main>
</Layout>
